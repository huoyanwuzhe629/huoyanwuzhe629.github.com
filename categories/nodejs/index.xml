<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nodejs on 千阳谷</title>
    <link>https://huoyanwuzhe629.github.io/categories/nodejs/</link>
    <description>Recent content in Nodejs on 千阳谷</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 07 Jul 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://huoyanwuzhe629.github.io/categories/nodejs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>nodejs异常处理</title>
      <link>https://huoyanwuzhe629.github.io/post/exceptional_handling/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://huoyanwuzhe629.github.io/post/exceptional_handling/</guid>
      <description>&lt;h2 id=&#34;好的错误处理&#34;&gt;好的错误处理&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;出现错误时能将任务中断在一个合适的位置&lt;/p&gt;

&lt;p&gt;比如用户请求服务数据，服务在向其他服务请求或者查数据库时出问题，如果直接停在出问题的地方，用户就得一直等服务响应直至超时，我们应该通过合理的错误处理，返回一个错误响应，以让用户明白情况&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;能记录错误的摘要、调用栈及其他上下文&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们的程序也需要在出现错误的情况下能够显示（或记录）一个错误的摘要、调用栈，以及其他的上下文。调用栈通常语言本身会提供，但很多时候仅有调用栈是不足以定位问题的，所以我们还需要去记录那些可能与这个错误有关的「上下文」，比如当时某几个关键的变量的值。对于一个服务器端项目，如果我们决定不向用户展示错误的详情，可能还需要为用户提供一个唯一的错误编号，以便用户事后反馈的时候我们可以根据编号还原当时的现场。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;通过这些记录能够快速地发现和解决问题&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>